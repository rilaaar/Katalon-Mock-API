Suite/Test/Step Name,Browser,Description,Tag,Start time,End time,Duration,Status
Verify Schema json,,,,2025-10-26 17:34:03,2025-10-26 17:34:13,10.272s,PASSED
,,,,,,,
Test Cases/Verifikasi Schema/POST - Create a New User,,,,2025-10-26 17:34:04,2025-10-26 17:34:09,5.490s,PASSED
defaultPackage.RandomData.setRandomUserData(),,,,2025-10-26 17:34:04,2025-10-26 17:34:04,0.271s,PASSED
"println(""Random ID yang digunakan: "" + randomId)",,,,2025-10-26 17:34:04,2025-10-26 17:34:04,0.016s,PASSED
"response = sendRequestAndVerify(findTestObject(""POST - Create a New User""))",,,,2025-10-26 17:34:04,2025-10-26 17:34:09,4.357s,PASSED
println(response.getResponseBodyContent()),,,,2025-10-26 17:34:09,2025-10-26 17:34:09,0.000s,PASSED
"schemaPath = getProjectDir() + ""/Include/schemas/create_a_new_user.json""",,,,2025-10-26 17:34:09,2025-10-26 17:34:09,0.000s,PASSED
schemaFile = new java.io.File(schemaPath),,,,2025-10-26 17:34:09,2025-10-26 17:34:09,0.000s,PASSED
schemaJson = new org.json.JSONObject(new org.json.JSONTokener(new java.io.FileInputStream(schemaFile))),,,,2025-10-26 17:34:09,2025-10-26 17:34:09,0.035s,PASSED
responseJson = new org.json.JSONArray(response.getResponseBodyContent()),,,,2025-10-26 17:34:09,2025-10-26 17:34:09,0.001s,PASSED
load(schemaJson).validate(responseJson),,,,2025-10-26 17:34:09,2025-10-26 17:34:09,0.170s,PASSED
,,,,,,,
Test Cases/Verifikasi Schema/GET - All Users,,,,2025-10-26 17:34:09,2025-10-26 17:34:10,1.184s,PASSED
"response = sendRequestAndVerify(findTestObject(""GET - All Users""))",,,,2025-10-26 17:34:09,2025-10-26 17:34:10,0.767s,PASSED
println(response.getResponseBodyContent()),,,,2025-10-26 17:34:10,2025-10-26 17:34:10,0.002s,PASSED
"schemaPath = getProjectDir() + ""/Include/schemas/get_ all_users.json""",,,,2025-10-26 17:34:10,2025-10-26 17:34:10,0.000s,PASSED
schemaFile = new java.io.File(schemaPath),,,,2025-10-26 17:34:10,2025-10-26 17:34:10,0.000s,PASSED
schemaJson = new org.json.JSONObject(new org.json.JSONTokener(new java.io.FileInputStream(schemaFile))),,,,2025-10-26 17:34:10,2025-10-26 17:34:10,0.000s,PASSED
responseJson = new org.json.JSONArray(response.getResponseBodyContent()),,,,2025-10-26 17:34:10,2025-10-26 17:34:10,0.007s,PASSED
load(schemaJson).validate(responseJson),,,,2025-10-26 17:34:10,2025-10-26 17:34:10,0.047s,PASSED
"println(""Random ID yang digunakan: "" + randomId)",,,,2025-10-26 17:34:10,2025-10-26 17:34:10,0.000s,PASSED
json = JsonSlurper().parseText(response.getResponseBodyContent()),,,,2025-10-26 17:34:10,2025-10-26 17:34:10,0.026s,PASSED
targetUser = json.find({ -> ... }),,,,2025-10-26 17:34:10,2025-10-26 17:34:10,0.017s,PASSED
if (targetUser),,,,2025-10-26 17:34:10,2025-10-26 17:34:10,0.003s,PASSED
,,,,,,,
Test Cases/Verifikasi Schema/GET - Single User,,,,2025-10-26 17:34:10,2025-10-26 17:34:11,1.193s,PASSED
"println(""Random ID yang digunakan: "" + randomId)",,,,2025-10-26 17:34:10,2025-10-26 17:34:10,0.001s,PASSED
"response = sendRequestAndVerify(findTestObject(""GET - Single User"", [""UserId"":randomId]))",,,,2025-10-26 17:34:10,2025-10-26 17:34:11,0.944s,PASSED
println(response.getResponseBodyContent()),,,,2025-10-26 17:34:11,2025-10-26 17:34:11,0.000s,PASSED
"schemaPath = getProjectDir() + ""/Include/schemas/get_single_user.json""",,,,2025-10-26 17:34:11,2025-10-26 17:34:11,0.000s,PASSED
schemaFile = new java.io.File(schemaPath),,,,2025-10-26 17:34:11,2025-10-26 17:34:11,0.000s,PASSED
schemaJson = new org.json.JSONObject(new org.json.JSONTokener(new java.io.FileInputStream(schemaFile))),,,,2025-10-26 17:34:11,2025-10-26 17:34:11,0.000s,PASSED
responseJson = new org.json.JSONArray(response.getResponseBodyContent()),,,,2025-10-26 17:34:11,2025-10-26 17:34:11,0.000s,PASSED
load(schemaJson).validate(responseJson),,,,2025-10-26 17:34:11,2025-10-26 17:34:11,0.000s,PASSED
,,,,,,,
Test Cases/Verifikasi Schema/PATCH - Update a User,,,,2025-10-26 17:34:11,2025-10-26 17:34:13,1.067s,PASSED
"println(""Random ID yang digunakan: "" + randomId)",,,,2025-10-26 17:34:12,2025-10-26 17:34:12,0.001s,PASSED
"response = sendRequestAndVerify(findTestObject(""PATCH - Update a User"", [""UserId"":randomId]))",,,,2025-10-26 17:34:12,2025-10-26 17:34:13,0.859s,PASSED
println(response.getResponseBodyContent()),,,,2025-10-26 17:34:13,2025-10-26 17:34:13,0.000s,PASSED
"schemaPath = getProjectDir() + ""/Include/schemas/update_a_user.json""",,,,2025-10-26 17:34:13,2025-10-26 17:34:13,0.000s,PASSED
schemaFile = new java.io.File(schemaPath),,,,2025-10-26 17:34:13,2025-10-26 17:34:13,0.000s,PASSED
schemaJson = new org.json.JSONObject(new org.json.JSONTokener(new java.io.FileInputStream(schemaFile))),,,,2025-10-26 17:34:13,2025-10-26 17:34:13,0.000s,PASSED
responseJson = new org.json.JSONArray(response.getResponseBodyContent()),,,,2025-10-26 17:34:13,2025-10-26 17:34:13,0.000s,PASSED
load(schemaJson).validate(responseJson),,,,2025-10-26 17:34:13,2025-10-26 17:34:13,0.000s,PASSED
,,,,,,,
Test Cases/Verifikasi Schema/DELETE - Delete a User,,,,2025-10-26 17:34:13,2025-10-26 17:34:13,0.953s,PASSED
"println(""Random ID yang digunakan: "" + randomId)",,,,2025-10-26 17:34:13,2025-10-26 17:34:13,0.009s,PASSED
"response = sendRequestAndVerify(findTestObject(""DELETE - Delete a User"", [""UserId"":randomId]))",,,,2025-10-26 17:34:13,2025-10-26 17:34:13,0.587s,PASSED
println(response.getResponseBodyContent()),,,,2025-10-26 17:34:13,2025-10-26 17:34:13,0.000s,PASSED
